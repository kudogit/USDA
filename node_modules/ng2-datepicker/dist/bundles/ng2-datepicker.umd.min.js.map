{
  "version": 3,
  "file": "ng2-datepicker.umd.min.js",
  "sources": [
    "ng://ng2-datepicker/out/src/ng-datepicker/component/ng-datepicker.component.ts",
    "ng://ng2-datepicker/out/src/ng-datepicker/module/ng-datepicker.module.ts"
  ],
  "sourcesContent": [
    "import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  subMonths,\n  setYear,\n  eachDay,\n  getDate,\n  getMonth,\n  getYear,\n  isToday,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  format,\n  getDay,\n  subDays,\n  setDay\n} from 'date-fns';\nimport { ISlimScrollOptions } from 'ngx-slimscroll';\n\nexport interface DatepickerOptions {\n  minYear?: number; // default: current year - 30\n  maxYear?: number; // default: current year + 30\n  displayFormat?: string; // default: 'MMM D[,] YYYY'\n  barTitleFormat?: string; // default: 'MMMM YYYY'\n  dayNamesFormat?: string; // default 'ddd'\n  barTitleIfEmpty?: string;\n  firstCalendarDay?: number; // 0 = Sunday (default), 1 = Monday, ..\n  locale?: object;\n  minDate?: Date;\n  maxDate?: Date;\n}\n\n/**\n * Internal library helper that helps to check if value is empty\n * @param value\n */\nconst isNil = (value: Date | DatepickerOptions) => {\n  return (typeof value === 'undefined') || (value === null);\n};\n\n@Component({\n  selector: 'ng-datepicker',\n  template: `<div class=\"ngx-datepicker-container\">\n  <input type=\"text\" *ngIf=\"!headless\" class=\"ngx-datepicker-input\" [(ngModel)]=\"displayValue\" readonly (click)=\"toggle()\">\n  <ng-content></ng-content>\n  <div class=\"ngx-datepicker-calendar-container ngx-datepicker-position-{{position}}\" *ngIf=\"isOpened\">\n    <div class=\"topbar-container\">\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 7 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" (click)=\"prevMonth()\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g transform=\"translate(-923.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g transform=\"translate(80.000000, 1361.000000)\">\n              <g transform=\"translate(0.000000, 430.000000)\">\n                <g transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Back\" points=\"6.015 4 0 9.013 6.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n      <span class=\"topbar-title\" (click)=\"toggleView()\">{{ barTitle }}</span>\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 6 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" (click)=\"nextMonth()\">\n        <g id=\"Source-Sans---UI-Elements-Kit\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"White-Layout\" transform=\"translate(-1182.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g id=\"Dropdowns-&amp;-Selector\" transform=\"translate(80.000000, 1361.000000)\">\n              <g id=\"Dropdowns\" transform=\"translate(0.000000, 430.000000)\">\n                <g id=\"Calendar\" transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\" id=\"Top-Bar-Nav\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Forward\" transform=\"translate(262.007500, 9.012500) scale(-1, 1) translate(-262.007500, -9.012500) \" points=\"265.015 4 259 9.013 265.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'days'\">\n      <div class=\"main-calendar-day-names\">\n        <span class=\"day-name-unit\" *ngFor=\"let name of dayNames\">{{ name }}</span>\n      </div>\n      <div class=\"main-calendar-days\">\n        <span\n          class=\"day-unit\"\n          *ngFor=\"let day of days; let i = index;\"\n          [ngClass]=\"{ 'is-prev-month': !day.inThisMonth, 'is-today': day.isToday, 'is-selected': day.isSelected, 'is-disabled': !day.isSelectable }\"\n          (click)=\"day.isSelectable && setDate(i)\"\n        >\n          {{ day.day }}\n        </span>\n      </div>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'years'\">\n      <div class=\"main-calendar-years\" slimScroll [options]=\"scrollOptions\">\n        <span class=\"year-unit\" *ngFor=\"let year of years; let i = index;\" [ngClass]=\"{ 'is-selected': year.isThisYear }\" (click)=\"setYear(i)\">{{ year.year }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.ngx-datepicker-position-bottom-left{top:40px;right:0}.ngx-datepicker-position-bottom-right{top:40px;left:0}.ngx-datepicker-position-top-left{bottom:40px;right:0}.ngx-datepicker-position-top-right{bottom:40px;left:0}.ngx-datepicker-container{position:relative}.ngx-datepicker-container .ngx-datepicker-input{padding:5px 10px;font-size:14px;width:200px;outline:0;border:1px solid #dfe3e9}.ngx-datepicker-container .ngx-datepicker-calendar-container{position:absolute;width:300px;background:#fff;-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.08);box-shadow:0 1px 4px 0 rgba(0,0,0,.08);border:1px solid #dfe3e9;border-radius:4px}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container{width:100%;height:50px;padding:15px;border-bottom:1px solid #dfe3e9;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg{cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg g{fill:#ced0da}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container .topbar-title{color:#3d495c;font-size:14px;font-weight:600;cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container{width:100%;height:100%;padding:15px 10px 0;font-size:12px;font-weight:500}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names{color:#a4a9b1;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names .day-name-unit{width:calc(100% / 7);text-transform:uppercase;text-align:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{padding:15px 0;width:100%;display:inline-block;max-height:275px;overflow:hidden}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 7);height:40px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;float:left;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:50%;color:#3d495c}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-prev-month{color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit:hover{background:#a4a9b1;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-selected{background:#1a91eb;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled{cursor:not-allowed;color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled:hover{background:0 0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{height:210px;display:block;padding:0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 3);border-radius:10px}`],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgDatepickerComponent), multi: true }\n  ]\n})\nexport class NgDatepickerComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @Input() options: DatepickerOptions;\n\n  /**\n   * Disable datepicker's input\n   */\n  @Input() headless = false;\n\n  /**\n   * Set datepicker's visibility state\n   */\n  @Input() isOpened = false;\n\n  /**\n   * Datepicker dropdown position\n   */\n  @Input() position = 'bottom-right';\n\n  private positions = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  innerValue: Date;\n  displayValue: string;\n  displayFormat: string;\n  date: Date;\n  barTitle: string;\n  barTitleFormat: string;\n  barTitleIfEmpty: string;\n  minYear: number;\n  maxYear: number;\n  firstCalendarDay: number;\n  view: string;\n  years: { year: number; isThisYear: boolean }[];\n  dayNames: string[];\n  dayNamesFormat: string;\n  scrollOptions: ISlimScrollOptions;\n  days: {\n    date: Date;\n    day: number;\n    month: number;\n    year: number;\n    inThisMonth: boolean;\n    isToday: boolean;\n    isSelected: boolean;\n    isSelectable: boolean;\n  }[];\n  locale: object;\n\n  private onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  get value(): Date {\n    return this.innerValue;\n  }\n\n  set value(val: Date) {\n    this.innerValue = val;\n    this.onChangeCallback(this.innerValue);\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.scrollOptions = {\n      barBackground: '#DFE3E9',\n      gridBackground: '#FFFFFF',\n      barBorderRadius: '3',\n      gridBorderRadius: '3',\n      barWidth: '6',\n      gridWidth: '6',\n      barMargin: '0',\n      gridMargin: '0'\n    };\n  }\n\n  ngOnInit() {\n    this.view = 'days';\n    this.date = new Date();\n    this.setOptions();\n    this.initDayNames();\n    this.initYears();\n\n    // Check if 'position' property is correct\n    if (this.positions.indexOf(this.position) === -1) {\n      throw new TypeError(`ng-datepicker: invalid position property value '${this.position}' (expected: ${this.positions.join(', ')})`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('options' in changes) {\n      this.setOptions();\n      this.initDayNames();\n      this.init();\n      this.initYears();\n    }\n  }\n\n  setOptions(): void {\n    const today = new Date(); // this const was added because during my tests, I noticed that at this level this.date is undefined\n    this.minYear = this.options && this.options.minYear || getYear(today) - 30;\n    this.maxYear = this.options && this.options.maxYear || getYear(today) + 30;\n    this.displayFormat = this.options && this.options.displayFormat || 'MMM D[,] YYYY';\n    this.barTitleFormat = this.options && this.options.barTitleFormat || 'MMMM YYYY';\n    this.dayNamesFormat = this.options && this.options.dayNamesFormat || 'ddd';\n    this.barTitleIfEmpty = this.options && this.options.barTitleIfEmpty || 'Click to select a date';\n    this.firstCalendarDay = this.options && this.options.firstCalendarDay || 0;\n    this.locale = this.options && { locale: this.options.locale } || {};\n  }\n\n  nextMonth(): void {\n    this.date = addMonths(this.date, 1);\n    this.init();\n  }\n\n  prevMonth(): void {\n    this.date = subMonths(this.date, 1);\n    this.init();\n  }\n\n  setDate(i: number): void {\n    this.date = this.days[i].date;\n    this.value = this.date;\n    this.init();\n    this.close();\n  }\n\n  setYear(i: number): void {\n    this.date = setYear(this.date, this.years[i].year);\n    this.init();\n    this.initYears();\n    this.view = 'days';\n  }\n\n  /**\n   * Checks if specified date is in range of min and max dates\n   * @param date\n   */\n  private isDateSelectable(date: Date): boolean {\n    if (isNil(this.options)) {\n      return true;\n    }\n\n    const minDateSet = !isNil(this.options.minDate);\n    const maxDateSet = !isNil(this.options.maxDate);\n    const timestamp = date.valueOf();\n\n    if (minDateSet && (timestamp < this.options.minDate.valueOf())) {\n      return false;\n    }\n\n    if (maxDateSet && (timestamp > this.options.maxDate.valueOf())) {\n      return false;\n    }\n\n    return true;\n  }\n\n  init(): void {\n    const start = startOfMonth(this.date);\n    const end = endOfMonth(this.date);\n\n    this.days = eachDay(start, end).map(date => {\n      return {\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: true,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      };\n    });\n\n    const tmp = getDay(start) - this.firstCalendarDay;\n    const prevDays = tmp < 0 ? 7 - this.firstCalendarDay : tmp;\n\n    for (let i = 1; i <= prevDays; i++) {\n      const date = subDays(start, i);\n      this.days.unshift({\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: false,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      });\n    }\n\n    this.displayValue = this.innerValue ? format(this.innerValue, this.displayFormat, this.locale) : '';\n    this.barTitle =  this.innerValue ? format(start, this.barTitleFormat, this.locale) : this.barTitleIfEmpty;\n  }\n\n  initYears(): void {\n    const range = this.maxYear - this.minYear;\n    this.years = Array.from(new Array(range), (x, i) => i + this.minYear).map(year => {\n      return { year: year, isThisYear: year === getYear(this.date) };\n    });\n  }\n\n  initDayNames(): void {\n    this.dayNames = [];\n    const start = this.firstCalendarDay;\n    for (let i = start; i <= 6 + start; i++) {\n      const date = setDay(new Date(), i);\n      this.dayNames.push(format(date, this.dayNamesFormat, this.locale));\n    }\n  }\n\n  toggleView(): void {\n    this.view = this.view === 'days' ? 'years' : 'days';\n  }\n\n  toggle(): void {\n    this.isOpened = !this.isOpened;\n  }\n\n  close(): void {\n    this.isOpened = false;\n  }\n\n  reset(): void {\n    this.date = null;\n    this.innerValue = null;\n    this.init();\n  }\n\n  writeValue(val: Date) {\n    if (val) {\n      this.date = val;\n      this.innerValue = val;\n      this.init();\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(startOfMonth(val), this.barTitleFormat, this.locale);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\n    if (!this.isOpened) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement.querySelector('.ngx-datepicker-input');\n\n    if (input == null) {\n      return;\n    }\n\n    if (e.target === input || input.contains(<any>e.target)) {\n      return;\n    }\n\n    const container = this.elementRef.nativeElement.querySelector('.ngx-datepicker-calendar-container');\n    if (container && container !== e.target && !container.contains(<any>e.target) && !(<any>e.target).classList.contains('year-unit')) {\n      this.close();\n    }\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgSlimScrollModule } from 'ngx-slimscroll';\nimport { NgDatepickerComponent } from '../component/ng-datepicker.component';\n\n@NgModule({\n  declarations: [ NgDatepickerComponent ],\n  imports: [ CommonModule, FormsModule, NgSlimScrollModule ],\n  exports: [ NgDatepickerComponent, CommonModule, FormsModule, NgSlimScrollModule ]\n})\nexport class NgDatepickerModule { }\n"
  ],
  "names": [
    "isNil",
    "value",
    "NgDatepickerComponent",
    "elementRef",
    "this",
    "headless",
    "isOpened",
    "position",
    "positions",
    "onTouchedCallback",
    "onChangeCallback",
    "scrollOptions",
    "barBackground",
    "gridBackground",
    "barBorderRadius",
    "gridBorderRadius",
    "barWidth",
    "gridWidth",
    "barMargin",
    "gridMargin",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "innerValue",
    "set",
    "val",
    "ngOnInit",
    "view",
    "date",
    "Date",
    "setOptions",
    "initDayNames",
    "initYears",
    "indexOf",
    "TypeError",
    "join",
    "ngOnChanges",
    "changes",
    "init",
    "today",
    "minYear",
    "options",
    "getYear",
    "maxYear",
    "displayFormat",
    "barTitleFormat",
    "dayNamesFormat",
    "barTitleIfEmpty",
    "firstCalendarDay",
    "locale",
    "nextMonth",
    "addMonths",
    "prevMonth",
    "subMonths",
    "setDate",
    "i",
    "days",
    "close",
    "setYear",
    "years",
    "year",
    "isDateSelectable",
    "minDateSet",
    "minDate",
    "maxDateSet",
    "maxDate",
    "timestamp",
    "valueOf",
    "_this",
    "start",
    "startOfMonth",
    "end",
    "endOfMonth",
    "eachDay",
    "map",
    "day",
    "getDate",
    "month",
    "getMonth",
    "inThisMonth",
    "isToday",
    "isSelected",
    "isSameDay",
    "isSameMonth",
    "isSameYear",
    "isSelectable",
    "tmp",
    "getDay",
    "prevDays",
    "subDays",
    "unshift",
    "displayValue",
    "format",
    "barTitle",
    "range",
    "Array",
    "from",
    "x",
    "isThisYear",
    "dayNames",
    "setDay",
    "push",
    "toggleView",
    "toggle",
    "reset",
    "writeValue",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "onBlur",
    "e",
    "input",
    "nativeElement",
    "querySelector",
    "target",
    "contains",
    "container",
    "classList",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "ElementRef",
    "Input",
    "HostListener",
    "NgDatepickerModule",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "FormsModule",
    "NgSlimScrollModule",
    "exports"
  ],
  "mappings": "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"
}
