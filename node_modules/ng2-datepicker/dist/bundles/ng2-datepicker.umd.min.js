!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/forms"),require("date-fns"),require("@angular/common"),require("ngx-slimscroll")):"function"==typeof define&&define.amd?define("ng2-datepicker",["exports","@angular/core","@angular/forms","date-fns","@angular/common","ngx-slimscroll"],n):n(e["ng2-datepicker"]={},e.ng.core,e.ng.forms,e.dateFns,e.ng.common,e.ngxSlimscroll)}(this,function(e,n,a,s,t,i){"use strict";var r=function(e){return null==e},o=function(){function e(e){this.elementRef=e,this.headless=!1,this.isOpened=!1,this.position="bottom-right",this.positions=["bottom-left","bottom-right","top-left","top-right"],this.onTouchedCallback=function(){},this.onChangeCallback=function(){},this.scrollOptions={barBackground:"#DFE3E9",gridBackground:"#FFFFFF",barBorderRadius:"3",gridBorderRadius:"3",barWidth:"6",gridWidth:"6",barMargin:"0",gridMargin:"0"}}return Object.defineProperty(e.prototype,"value",{get:function(){return this.innerValue},set:function(e){this.innerValue=e,this.onChangeCallback(this.innerValue)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){if(this.view="days",this.date=new Date,this.setOptions(),this.initDayNames(),this.initYears(),-1===this.positions.indexOf(this.position))throw new TypeError("ng-datepicker: invalid position property value '"+this.position+"' (expected: "+this.positions.join(", ")+")")},e.prototype.ngOnChanges=function(e){"options"in e&&(this.setOptions(),this.initDayNames(),this.init(),this.initYears())},e.prototype.setOptions=function(){var e=new Date;this.minYear=this.options&&this.options.minYear||s.getYear(e)-30,this.maxYear=this.options&&this.options.maxYear||s.getYear(e)+30,this.displayFormat=this.options&&this.options.displayFormat||"MMM D[,] YYYY",this.barTitleFormat=this.options&&this.options.barTitleFormat||"MMMM YYYY",this.dayNamesFormat=this.options&&this.options.dayNamesFormat||"ddd",this.barTitleIfEmpty=this.options&&this.options.barTitleIfEmpty||"Click to select a date",this.firstCalendarDay=this.options&&this.options.firstCalendarDay||0,this.locale=this.options&&{locale:this.options.locale}||{}},e.prototype.nextMonth=function(){this.date=s.addMonths(this.date,1),this.init()},e.prototype.prevMonth=function(){this.date=s.subMonths(this.date,1),this.init()},e.prototype.setDate=function(e){this.date=this.days[e].date,this.value=this.date,this.init(),this.close()},e.prototype.setYear=function(e){this.date=s.setYear(this.date,this.years[e].year),this.init(),this.initYears(),this.view="days"},e.prototype.isDateSelectable=function(e){if(r(this.options))return!0;var n=!r(this.options.minDate),a=!r(this.options.maxDate),t=e.valueOf();return!(n&&t<this.options.minDate.valueOf())&&!(a&&t>this.options.maxDate.valueOf())},e.prototype.init=function(){var n=this,e=s.startOfMonth(this.date),a=s.endOfMonth(this.date);this.days=s.eachDay(e,a).map(function(e){return{date:e,day:s.getDate(e),month:s.getMonth(e),year:s.getYear(e),inThisMonth:!0,isToday:s.isToday(e),isSelected:s.isSameDay(e,n.innerValue)&&s.isSameMonth(e,n.innerValue)&&s.isSameYear(e,n.innerValue),isSelectable:n.isDateSelectable(e)}});for(var t=s.getDay(e)-this.firstCalendarDay,i=t<0?7-this.firstCalendarDay:t,r=1;r<=i;r++){var o=s.subDays(e,r);this.days.unshift({date:o,day:s.getDate(o),month:s.getMonth(o),year:s.getYear(o),inThisMonth:!1,isToday:s.isToday(o),isSelected:s.isSameDay(o,this.innerValue)&&s.isSameMonth(o,this.innerValue)&&s.isSameYear(o,this.innerValue),isSelectable:this.isDateSelectable(o)})}this.displayValue=this.innerValue?s.format(this.innerValue,this.displayFormat,this.locale):"",this.barTitle=this.innerValue?s.format(e,this.barTitleFormat,this.locale):this.barTitleIfEmpty},e.prototype.initYears=function(){var a=this,e=this.maxYear-this.minYear;this.years=Array.from(new Array(e),function(e,n){return n+a.minYear}).map(function(e){return{year:e,isThisYear:e===s.getYear(a.date)}})},e.prototype.initDayNames=function(){this.dayNames=[];for(var e=this.firstCalendarDay,n=e;n<=6+e;n++){var a=s.setDay(new Date,n);this.dayNames.push(s.format(a,this.dayNamesFormat,this.locale))}},e.prototype.toggleView=function(){this.view="days"===this.view?"years":"days"},e.prototype.toggle=function(){this.isOpened=!this.isOpened},e.prototype.close=function(){this.isOpened=!1},e.prototype.reset=function(){this.date=null,this.innerValue=null,this.init()},e.prototype.writeValue=function(e){e&&(this.date=e,this.innerValue=e,this.init(),this.displayValue=s.format(this.innerValue,this.displayFormat,this.locale),this.barTitle=s.format(s.startOfMonth(e),this.barTitleFormat,this.locale))},e.prototype.registerOnChange=function(e){this.onChangeCallback=e},e.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},e.prototype.onBlur=function(e){if(this.isOpened){var n=this.elementRef.nativeElement.querySelector(".ngx-datepicker-input");if(null!=n&&e.target!==n&&!n.contains(e.target)){var a=this.elementRef.nativeElement.querySelector(".ngx-datepicker-calendar-container");!a||a===e.target||a.contains(e.target)||e.target.classList.contains("year-unit")||this.close()}}},e}();o.decorators=[{type:n.Component,args:[{selector:"ng-datepicker",template:'<div class="ngx-datepicker-container">\n  <input type="text" *ngIf="!headless" class="ngx-datepicker-input" [(ngModel)]="displayValue" readonly (click)="toggle()">\n  <ng-content></ng-content>\n  <div class="ngx-datepicker-calendar-container ngx-datepicker-position-{{position}}" *ngIf="isOpened">\n    <div class="topbar-container">\n      <svg width="7px" height="10px" viewBox="0 0 7 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" (click)="prevMonth()">\n        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n          <g transform="translate(-923.000000, -1882.000000)" fill="#CED0DA">\n            <g transform="translate(80.000000, 1361.000000)">\n              <g transform="translate(0.000000, 430.000000)">\n                <g transform="translate(825.000000, 0.000000)">\n                  <g transform="translate(0.000000, 72.000000)">\n                    <g transform="translate(18.000000, 15.000000)">\n                      <polygon id="Back" points="6.015 4 0 9.013 6.015 14.025"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n      <span class="topbar-title" (click)="toggleView()">{{ barTitle }}</span>\n      <svg width="7px" height="10px" viewBox="0 0 6 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" (click)="nextMonth()">\n        <g id="Source-Sans---UI-Elements-Kit" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n          <g id="White-Layout" transform="translate(-1182.000000, -1882.000000)" fill="#CED0DA">\n            <g id="Dropdowns-&amp;-Selector" transform="translate(80.000000, 1361.000000)">\n              <g id="Dropdowns" transform="translate(0.000000, 430.000000)">\n                <g id="Calendar" transform="translate(825.000000, 0.000000)">\n                  <g transform="translate(0.000000, 72.000000)" id="Top-Bar-Nav">\n                    <g transform="translate(18.000000, 15.000000)">\n                      <polygon id="Forward" transform="translate(262.007500, 9.012500) scale(-1, 1) translate(-262.007500, -9.012500) " points="265.015 4 259 9.013 265.015 14.025"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n    <div class="main-calendar-container" *ngIf="view === \'days\'">\n      <div class="main-calendar-day-names">\n        <span class="day-name-unit" *ngFor="let name of dayNames">{{ name }}</span>\n      </div>\n      <div class="main-calendar-days">\n        <span\n          class="day-unit"\n          *ngFor="let day of days; let i = index;"\n          [ngClass]="{ \'is-prev-month\': !day.inThisMonth, \'is-today\': day.isToday, \'is-selected\': day.isSelected, \'is-disabled\': !day.isSelectable }"\n          (click)="day.isSelectable && setDate(i)"\n        >\n          {{ day.day }}\n        </span>\n      </div>\n    </div>\n    <div class="main-calendar-container" *ngIf="view === \'years\'">\n      <div class="main-calendar-years" slimScroll [options]="scrollOptions">\n        <span class="year-unit" *ngFor="let year of years; let i = index;" [ngClass]="{ \'is-selected\': year.isThisYear }" (click)="setYear(i)">{{ year.year }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".ngx-datepicker-position-bottom-left{top:40px;right:0}.ngx-datepicker-position-bottom-right{top:40px;left:0}.ngx-datepicker-position-top-left{bottom:40px;right:0}.ngx-datepicker-position-top-right{bottom:40px;left:0}.ngx-datepicker-container{position:relative}.ngx-datepicker-container .ngx-datepicker-input{padding:5px 10px;font-size:14px;width:200px;outline:0;border:1px solid #dfe3e9}.ngx-datepicker-container .ngx-datepicker-calendar-container{position:absolute;width:300px;background:#fff;-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.08);box-shadow:0 1px 4px 0 rgba(0,0,0,.08);border:1px solid #dfe3e9;border-radius:4px}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container{width:100%;height:50px;padding:15px;border-bottom:1px solid #dfe3e9;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg{cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg g{fill:#ced0da}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container .topbar-title{color:#3d495c;font-size:14px;font-weight:600;cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container{width:100%;height:100%;padding:15px 10px 0;font-size:12px;font-weight:500}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names{color:#a4a9b1;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names .day-name-unit{width:calc(100% / 7);text-transform:uppercase;text-align:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{padding:15px 0;width:100%;display:inline-block;max-height:275px;overflow:hidden}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 7);height:40px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;float:left;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:50%;color:#3d495c}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-prev-month{color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit:hover{background:#a4a9b1;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-selected{background:#1a91eb;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled{cursor:not-allowed;color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled:hover{background:0 0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{height:210px;display:block;padding:0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 3);border-radius:10px}"],providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:n.forwardRef(function(){return o}),multi:!0}]}]}],o.ctorParameters=function(){return[{type:n.ElementRef}]},o.propDecorators={options:[{type:n.Input}],headless:[{type:n.Input}],isOpened:[{type:n.Input}],position:[{type:n.Input}],onBlur:[{type:n.HostListener,args:["document:click",["$event"]]}]};var c=function(){};c.decorators=[{type:n.NgModule,args:[{declarations:[o],imports:[t.CommonModule,a.FormsModule,i.NgSlimScrollModule],exports:[o,t.CommonModule,a.FormsModule,i.NgSlimScrollModule]}]}],e.NgDatepickerModule=c,e.NgDatepickerComponent=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng2-datepicker.umd.min.js.map
